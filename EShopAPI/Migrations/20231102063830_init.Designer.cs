// <auto-generated />
using System;
using System.Text.Json;
using EShopAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EShopAPI.Migrations
{
    [DbContext(typeof(EShopContext))]
    [Migration("20231102063830_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EShopAPI.Cores.CompositeProductItems.CompositeProductItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompositeProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("composite_product_id")
                        .HasComment("組合產品detail的id");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<long>("EshopUnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("eshop_unit_id")
                        .HasComment("單位");

                    b.Property<bool>("IsAlwaysSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_always_sale")
                        .HasComment("是否總是特價");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("單筆價格");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("SaleEndDate")
                        .HasColumnType("bigint")
                        .HasColumnName("sale_end_date")
                        .HasComment("特價結束日期");

                    b.Property<long?>("SaleStartDate")
                        .HasColumnType("bigint")
                        .HasColumnName("sale_start_date")
                        .HasComment("特價起始日期");

                    b.Property<long>("ShopInventoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("shop_inventory_id")
                        .HasComment("庫存id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("EshopUnitId");

                    b.HasIndex("ShopInventoryId");

                    b.HasIndex("CompositeProductId", "ShopInventoryId")
                        .IsUnique();

                    b.ToTable("composite_product_item", "eshop", t =>
                        {
                            t.HasComment("組合產品實際的內容物");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.CompositeProducts.CompositeProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<long>("EShopUnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("eshop_unit_id")
                        .HasComment("商店單位id");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<bool>("IsUseCoupon")
                        .HasColumnType("boolean")
                        .HasColumnName("is_use_coupon")
                        .HasComment("是否可以使用優惠券");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("ShopInventoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("shop_inventory_id")
                        .HasComment("庫存id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("EShopUnitId");

                    b.HasIndex("ShopInventoryId")
                        .IsUnique();

                    b.ToTable("composite_product", "eshop", t =>
                        {
                            t.HasComment("要販售的組合產品");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.CustomVariantAttributes.CustomVariantAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("AttributeType")
                        .HasColumnType("integer")
                        .HasColumnName("attribute_type")
                        .HasComment("屬性類型");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_system_default")
                        .HasComment("是否為系統預設");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("屬性名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("屬性代碼");

                    b.Property<JsonDocument>("Options")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("options")
                        .HasComment("屬性的選項清單");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("custom_variant_attribute", "eshop", t =>
                        {
                            t.HasComment("自訂變種屬性");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AttributeType = 3,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "顏色",
                            Number = "color",
                            Options = System.Text.Json.JsonDocument.Parse("[{\"id\":\"3a6d7129-b3a3-450c-80cf-e3bf51ab1851\",\"name\":\"\\u9ED1\\u8272\",\"value\":\"#000000\"},{\"id\":\"0b2afd62-c05b-4d64-8bed-99cbd232c8ad\",\"name\":\"\\u767D\\u8272\",\"value\":\"#FFFFFF\"},{\"id\":\"146d0dcf-048c-4ca1-bcb0-2c66a84fc6b8\",\"name\":\"\\u7D05\\u8272\",\"value\":\"#FF0000\"},{\"id\":\"cc2c6e43-5c11-4ed9-97dc-0379f934370f\",\"name\":\"\\u7DA0\\u8272\",\"value\":\"#00FF00\"},{\"id\":\"6e717c63-3722-4c5e-b0ea-a444b14e663b\",\"name\":\"\\u85CD\\u8272\",\"value\":\"#0000FF\"}]", new System.Text.Json.JsonDocumentOptions())
                        },
                        new
                        {
                            Id = 2L,
                            AttributeType = 1,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "尺寸",
                            Number = "size",
                            Options = System.Text.Json.JsonDocument.Parse("[{\"id\":\"0b6ab0eb-b2e7-4679-80fc-b63b31725b65\",\"name\":\"XS\",\"value\":\"XS\"},{\"id\":\"a7ac7a9d-7da8-4bbb-8731-6f51be57b7b6\",\"name\":\"S\",\"value\":\"S\"},{\"id\":\"f3c17846-c299-4dce-b029-d79d02279c0e\",\"name\":\"M\",\"value\":\"M\"},{\"id\":\"cc0a7bc4-61be-41b4-abb0-7bcbbc78ed87\",\"name\":\"L\",\"value\":\"L\"},{\"id\":\"4444a8b0-1189-42cd-b653-b6cbb576f7e8\",\"name\":\"XL\",\"value\":\"XL\"},{\"id\":\"ce754faf-a16a-491b-ba1b-2ef73a62d747\",\"name\":\"XXL\",\"value\":\"XXL\"}]", new System.Text.Json.JsonDocumentOptions())
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.DeliveryCategories.DeliveryCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("物流種類名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("物流種類代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("delivery_category", "eshop", t =>
                        {
                            t.HasComment("物流種類");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.DeliveryPreferences.DeliveryPreference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address")
                        .HasComment("地址");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<long>("DeliveryCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("delivery_category_id")
                        .HasComment("物流類型id");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("boolean")
                        .HasColumnName("is_primary")
                        .HasComment("是否為主要的運送方式");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("ShopUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("使用者id");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryCategoryId");

                    b.HasIndex("ShopUserId");

                    b.HasIndex("UserId", "DeliveryCategoryId")
                        .IsUnique();

                    b.ToTable("delivery_preference", "eshop", t =>
                        {
                            t.HasComment("物流偏好實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.EShopUnits.EShopUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_system_default")
                        .HasComment("是否為系統預設");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("name")
                        .HasComment("單位名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("單位代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("eshop_unit", "eshop", t =>
                        {
                            t.HasComment("eShop單位總表");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "顆",
                            Number = "Piece"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "件",
                            Number = "Unit"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "雙/副",
                            Number = "Pair"
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "套/台/架",
                            Number = "Set"
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "打",
                            Number = "Dozen"
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "卷",
                            Number = "Roll"
                        },
                        new
                        {
                            Id = 7L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "袋",
                            Number = "Bag"
                        },
                        new
                        {
                            Id = 8L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            IsSystemDefault = true,
                            Name = "瓶",
                            Number = "Bottle"
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.MapCompositeProductDeliveries.MapCompositeProductDelivery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompositeProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("composite_product_id")
                        .HasComment("組合產品id");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<long>("DeliveryCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("delivery_category_id")
                        .HasComment("物流種類id");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryCategoryId");

                    b.HasIndex("CompositeProductId", "DeliveryCategoryId")
                        .IsUnique();

                    b.ToTable("map_composite_product_delivery", "eshop", t =>
                        {
                            t.HasComment("組合產品與物流種類關聯的實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.MapPermissionActions.MapPermissionAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ActionId")
                        .HasColumnType("bigint")
                        .HasColumnName("action_id")
                        .HasComment("功能id");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("permisstion_id")
                        .HasComment("權限id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("PermissionId", "ActionId")
                        .IsUnique();

                    b.ToTable("map_permission_action", "eshop", t =>
                        {
                            t.HasComment("權限與功能的實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.MapProductCategories.MapProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("ProductCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_category_id")
                        .HasComment("產品種類id");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasComment("產品id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductId", "ProductCategoryId")
                        .IsUnique();

                    b.ToTable("map_product_category", "eshop", t =>
                        {
                            t.HasComment("產品與產品類別關聯的實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.MapProductDeliveryCategorys.MapProductDeliveryCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<long>("DeliveryCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("delivery_category_id")
                        .HasComment("物流種類id");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id")
                        .HasComment("產品id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryCategoryId");

                    b.HasIndex("ProductId", "DeliveryCategoryId")
                        .IsUnique();

                    b.ToTable("map_product_delivery_category", "eshop", t =>
                        {
                            t.HasComment("產品與物流種類關係的實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.MapRolePermissions.MapRolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsCreatePermission")
                        .HasColumnType("boolean")
                        .HasColumnName("is_create_permission")
                        .HasComment("是否有新增的權限");

                    b.Property<bool>("IsDeletePermission")
                        .HasColumnType("boolean")
                        .HasColumnName("is_delete_permission")
                        .HasComment("是否有刪除的權限");

                    b.Property<bool>("IsReadPermission")
                        .HasColumnType("boolean")
                        .HasColumnName("is_read_permission")
                        .HasComment("是否有讀取的權限");

                    b.Property<bool>("IsUpdatePermission")
                        .HasColumnType("boolean")
                        .HasColumnName("is_update_permission")
                        .HasComment("是否有編輯的權限");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint")
                        .HasColumnName("permission_id")
                        .HasComment("權限id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id")
                        .HasComment("角色id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId", "PermissionId")
                        .IsUnique();

                    b.ToTable("map_role_permission", "eshop", t =>
                        {
                            t.HasComment("角色與權限關聯的實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = true,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = true,
                            PermissionId = 6L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = true,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = true,
                            PermissionId = 7L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = true,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = true,
                            PermissionId = 8L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = true,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = true,
                            PermissionId = 9L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = true,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = true,
                            PermissionId = 10L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = false,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = false,
                            PermissionId = 6L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = false,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = false,
                            PermissionId = 7L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = false,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = false,
                            PermissionId = 8L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = false,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = false,
                            PermissionId = 9L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsCreatePermission = false,
                            IsDeletePermission = false,
                            IsReadPermission = true,
                            IsUpdatePermission = false,
                            PermissionId = 10L,
                            RoleId = 2L
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.MapUserRoles.MapUserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id")
                        .HasComment("角色id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("使用者id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.ToTable("map_user_role", "eshop", t =>
                        {
                            t.HasComment("使用者與角色關聯的實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            Remarks = "員工測試帳號對應的員工角色",
                            RoleId = 1L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopUser",
                            Remarks = "一般使用者帳號對應的基礎使用者角色",
                            RoleId = 2L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopUser",
                            Remarks = "VIP帳號對應的VIP使用者角色",
                            RoleId = 3L,
                            UserId = 4L
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderCompositeProducts.OrderCompositeProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("master_id")
                        .HasComment("訂單主檔id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("ShopInventoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("shop_inventory_id")
                        .HasComment("商店產品庫存id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("ShopInventoryId");

                    b.HasIndex("MasterId", "ShopInventoryId")
                        .IsUnique();

                    b.ToTable("order_composite_product", "eshop", t =>
                        {
                            t.HasComment("訂單 (針對組合產品)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderForCompositeItems.OrderCompositeProductItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<double?>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<bool>("IsSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sale")
                        .HasComment("是否特價");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("OrderCompositeProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_composite_product_id")
                        .HasComment("訂單(針對組合產品)的id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("單筆價格(原價)");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("ShopInventoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("shop_inventory_id")
                        .HasComment("商店產品庫存id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("ShopInventoryId");

                    b.HasIndex("OrderCompositeProductId", "ShopInventoryId")
                        .IsUnique();

                    b.ToTable("order_composite_product_item", "eshop", t =>
                        {
                            t.HasComment("訂單 (針對組合產品項目)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderMasters.OrderMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<long>("DeliveryCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("delivery_category_id")
                        .HasComment("物流類型id");

                    b.Property<int>("IsCompositeProduct")
                        .HasColumnType("integer")
                        .HasColumnName("is_composite_product")
                        .HasComment("是否為組合產品, true = 是組合產品 , false = 不是組合產品");

                    b.Property<int>("IsPay")
                        .HasColumnType("integer")
                        .HasColumnName("is_pay")
                        .HasComment("是否已付款");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("訂單編號");

                    b.Property<long>("PaymentCategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("payment_category_id")
                        .HasComment("支付類型id");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("訂單狀態");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("使用者id");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryCategoryId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("PaymentCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("order_master", "eshop", t =>
                        {
                            t.HasComment("訂單主檔");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderProducts.OrderProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<double?>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<bool>("IsSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sale")
                        .HasComment("是否特價");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("master_id")
                        .HasComment("訂單主檔id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("單筆價格(原價)");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("ShopInventoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("shop_inventory_id")
                        .HasComment("商店產品庫存id");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("ShopInventoryId");

                    b.HasIndex("MasterId", "ShopInventoryId")
                        .IsUnique();

                    b.ToTable("order_product", "eshop", t =>
                        {
                            t.HasComment("訂單 (針對非組合產品)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.PaymentCategories.PaymentCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("支付類型名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("支付類型代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("payment_category", "eshop", t =>
                        {
                            t.HasComment("支付類型實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ProductCategories.ProductCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("產品類別名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("產品類別代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("product_category", "eshop", t =>
                        {
                            t.HasComment("產品類別");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.Products.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<double?>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<long>("EShopUnitId")
                        .HasColumnType("bigint")
                        .HasColumnName("eshop_unit_id")
                        .HasComment("商店單位id");

                    b.Property<bool>("IsAlwaysSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_always_sale")
                        .HasComment("是否總是特價");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<bool>("IsUseCoupon")
                        .HasColumnType("boolean")
                        .HasColumnName("is_use_coupon")
                        .HasComment("是否可以使用優惠券");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("價格");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("SaleEndDate")
                        .HasColumnType("bigint")
                        .HasColumnName("sale_end_date")
                        .HasComment("特價結束日期");

                    b.Property<long?>("SaleStartDate")
                        .HasColumnType("bigint")
                        .HasColumnName("sale_start_date")
                        .HasComment("特價起始日期");

                    b.Property<long>("ShopInventoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("shop_inventory_id")
                        .HasComment("庫存id");

                    b.Property<int?>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("產品狀態, 暫無想法，保留欄位");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<JsonDocument>("VariantAttribute")
                        .HasColumnType("jsonb")
                        .HasColumnName("variant_attribute")
                        .HasComment("變種屬性, 這個產品的變種屬性分別對應的值?");

                    b.HasKey("Id");

                    b.HasIndex("EShopUnitId");

                    b.HasIndex("ShopInventoryId")
                        .IsUnique();

                    b.ToTable("product", "eshop", t =>
                        {
                            t.HasComment("要販售的產品");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderCompositeProductItems.RecordOrderCompositeProductItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand")
                        .HasComment("品牌");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<long>("DetailId")
                        .HasColumnType("bigint")
                        .HasColumnName("detail_id")
                        .HasComment("訂單紀錄(針對組合產品detail)的id");

                    b.Property<double?>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<bool>("IsSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sale")
                        .HasComment("是否特價");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("單筆價格(原價)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_name")
                        .HasComment("產品名稱");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_number")
                        .HasComment("產品代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier")
                        .HasComment("供應商");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.ToTable("record_order_composite_product_item", "eshop", t =>
                        {
                            t.HasComment("訂單紀錄(針對組合產品item)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderCompositeProducts.RecordOrderCompositeProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand")
                        .HasComment("品牌");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<double?>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<bool>("IsSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sale")
                        .HasComment("是否特價");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("master_id")
                        .HasComment("訂單紀錄主檔id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("單筆價格(原價)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_name")
                        .HasComment("產品名稱");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_number")
                        .HasComment("產品代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier")
                        .HasComment("供應商");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("record_order_composite_product", "eshop", t =>
                        {
                            t.HasComment("訂單紀錄(針對組合產品)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderMasters.RecordOrderMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<string>("DeliveryCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("delivery_category_name")
                        .HasComment("物流類型名稱");

                    b.Property<string>("DeliveryCategoryNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("delivery_category_number")
                        .HasComment("物流類型代碼");

                    b.Property<bool>("IsCompositeProduct")
                        .HasColumnType("boolean")
                        .HasColumnName("is_composite_product")
                        .HasComment("是否為組合產品");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("order_number")
                        .HasComment("訂單編號");

                    b.Property<string>("PaymentCategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_category_name")
                        .HasComment("支付類型代碼");

                    b.Property<string>("PaymentCategoryNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("payment_category_number")
                        .HasComment("支付類型代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status")
                        .HasComment("訂單狀態");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("使用者id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("record_order_master", "eshop", t =>
                        {
                            t.HasComment("訂單主檔紀錄");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderProducts.RecordOrderProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand")
                        .HasComment("品牌");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<double?>("Discount")
                        .HasColumnType("double precision")
                        .HasColumnName("discount")
                        .HasComment("折扣數");

                    b.Property<bool>("IsSale")
                        .HasColumnType("boolean")
                        .HasColumnName("is_sale")
                        .HasComment("是否特價");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("master_id")
                        .HasComment("訂單紀錄主檔id");

                    b.Property<int>("Price")
                        .HasColumnType("integer")
                        .HasColumnName("price")
                        .HasComment("單筆價格(原價)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_name")
                        .HasComment("產品名稱");

                    b.Property<string>("ProductNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("product_number")
                        .HasComment("產品代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier")
                        .HasComment("供應商");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("record_order_product", "eshop", t =>
                        {
                            t.HasComment("訂單紀錄(針對非組合產品)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopActions.ShopAction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("功能名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("功能代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("shop_action", "eshop", t =>
                        {
                            t.HasComment("商店Action(功能)實體, 存角色權限可以用哪些API (Controller Action)");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopCarts.ShopCart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count")
                        .HasComment("數量");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<long>("ObjectId")
                        .HasColumnType("bigint")
                        .HasColumnName("object_id")
                        .HasComment("物件id (根據ProductEntityType不同而對應的實體id)");

                    b.Property<int>("ProductEntityType")
                        .HasColumnType("integer")
                        .HasColumnName("product_entity_type")
                        .HasComment("產品實體類型");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long>("ShopUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id")
                        .HasComment("使用者id");

                    b.HasKey("Id");

                    b.HasIndex("ShopUserId");

                    b.HasIndex("UserId", "ProductEntityType", "ObjectId")
                        .IsUnique();

                    b.ToTable("shop_cart", "eshop", t =>
                        {
                            t.HasComment("購物車實體");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopCoupons.ShopCoupon", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CouponType")
                        .HasColumnType("integer")
                        .HasColumnName("coupon_type")
                        .HasComment("優惠券類型");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("角色名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("角色代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<long?>("UseEndDate")
                        .HasColumnType("bigint")
                        .HasColumnName("use_end_date")
                        .HasComment("有效期限(起)");

                    b.Property<long?>("UseStartDate")
                        .HasColumnType("bigint")
                        .HasColumnName("use_start_date")
                        .HasComment("有效期限(起)");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("shop_coupon", "eshop", t =>
                        {
                            t.HasComment("商店優惠券");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopInventories.ShopInventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand")
                        .HasComment("品牌");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<int>("InventoryAlert")
                        .HasColumnType("integer")
                        .HasColumnName("inventory_alert")
                        .HasComment("商品庫存警告數");

                    b.Property<int>("InventoryQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("inventory_quantity")
                        .HasComment("商品庫存數量");

                    b.Property<bool>("IsComposite")
                        .HasColumnType("boolean")
                        .HasColumnName("is_composite")
                        .HasComment("是否為組合產品");

                    b.Property<bool>("IsCompositeOnly")
                        .HasColumnType("boolean")
                        .HasColumnName("is_composite_only")
                        .HasComment("是否只能讓組合產品使用");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("商品名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("商品代碼");

                    b.Property<int>("ProductType")
                        .HasColumnType("integer")
                        .HasColumnName("product_type")
                        .HasComment("產品類型");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<string>("Supplier")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplier")
                        .HasComment("供應商");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.Property<JsonDocument>("VariantAttribute")
                        .HasColumnType("jsonb")
                        .HasColumnName("variant_attribute")
                        .HasComment("變種屬性, 這個產品有哪個變種屬性? 值是是什麼 ex: color: red, size: s");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("shop_inventory", "eshop", t =>
                        {
                            t.HasComment("商店庫存");
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopPermissions.ShopPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("權限名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("權限代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("shop_permission", "eshop", t =>
                        {
                            t.HasComment("商店權限實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店使用者",
                            Number = "ShopUser"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店角色",
                            Number = "ShopRole"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店使用者與角色關係",
                            Number = "MapUserRole"
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店權限",
                            Number = "ShopPermission"
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店角色與權限關係",
                            Number = "MapRolePermission"
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品主檔",
                            Number = "ProductMaster"
                        },
                        new
                        {
                            Id = 7L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品細項",
                            Number = "ProductDetail"
                        },
                        new
                        {
                            Id = 8L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品主檔",
                            Number = "CompositeProductMaster"
                        },
                        new
                        {
                            Id = 9L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品細項",
                            Number = "CompositeProductDetail"
                        },
                        new
                        {
                            Id = 10L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品細項的項目",
                            Number = "CompositeProductItem"
                        },
                        new
                        {
                            Id = 11L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店庫存",
                            Number = "ShopInventory"
                        },
                        new
                        {
                            Id = 12L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店單位",
                            Number = "EshopUnit"
                        },
                        new
                        {
                            Id = 13L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品類型",
                            Number = "ProductCategory"
                        },
                        new
                        {
                            Id = 14L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品與產品類型的關係",
                            Number = "MapProductCategory"
                        },
                        new
                        {
                            Id = 15L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "物流類型",
                            Number = "DeliveryCategory"
                        },
                        new
                        {
                            Id = 16L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品與物流的關係",
                            Number = "MapCompositeProductDelivery"
                        },
                        new
                        {
                            Id = 17L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品與物流的關係",
                            Number = "MapProductDeliveryCategory"
                        },
                        new
                        {
                            Id = 18L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "物流偏好",
                            Number = "DeliveryPreference"
                        },
                        new
                        {
                            Id = 19L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "訂單主檔",
                            Number = "OrderMaster"
                        },
                        new
                        {
                            Id = 20L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品訂單",
                            Number = "OrderForProduct"
                        },
                        new
                        {
                            Id = 21L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品訂單細項",
                            Number = "OrderForCompositeDetail"
                        },
                        new
                        {
                            Id = 22L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品訂單細項的項目",
                            Number = "OrderForCompositeItem"
                        },
                        new
                        {
                            Id = 23L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "購物車",
                            Number = "ShopCart"
                        },
                        new
                        {
                            Id = 24L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "訂單主檔紀錄",
                            Number = "RecordOrderMaster"
                        },
                        new
                        {
                            Id = 25L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "產品訂單紀錄",
                            Number = "RecordOrderForProduct"
                        },
                        new
                        {
                            Id = 26L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品訂單細項紀錄",
                            Number = "RecordOrderForCompositeDetail"
                        },
                        new
                        {
                            Id = 27L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "組合產品訂單細項的項目紀錄",
                            Number = "RecordOrderForCompositeItem"
                        },
                        new
                        {
                            Id = 28L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店優惠券",
                            Number = "ShopCoupon"
                        },
                        new
                        {
                            Id = 29L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "付款類型",
                            Number = "PaymentCategory"
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopRoles.ShopRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("角色名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("角色代碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("shop_role", "eshop", t =>
                        {
                            t.HasComment("商店角色實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "商店員工角色",
                            Number = "shop_employee",
                            Remarks = "員工角色"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "一般客戶角色",
                            Number = "custom",
                            Remarks = "一般客戶角色"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsEnable = true,
                            Name = "VIP客戶角色",
                            Number = "vip_custom",
                            Remarks = "VIP客戶角色"
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopUsers.ShopUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(0)
                        .HasComment("系統id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("address")
                        .HasComment("地址");

                    b.Property<long>("CreateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("create_date")
                        .HasComment("建立日期");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("create_user")
                        .HasComment("建立者");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email")
                        .HasComment("Email");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_admin")
                        .HasComment("是否為管理員");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enable")
                        .HasComment("是否啟用");

                    b.Property<JsonDocument>("Language")
                        .HasColumnType("jsonb")
                        .HasColumnName("language")
                        .HasComment("多國語系");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("使用者名稱");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number")
                        .HasComment("使用者代碼/帳號");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone")
                        .HasComment("手機");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("pwd")
                        .HasComment("密碼");

                    b.Property<string>("Remarks")
                        .HasColumnType("text")
                        .HasColumnName("remarks")
                        .HasComment("備註");

                    b.Property<long?>("UpdateDate")
                        .HasColumnType("bigint")
                        .HasColumnName("update_date")
                        .HasComment("更新日期");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("update_user")
                        .HasComment("更新者");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("shop_user", "eshop", t =>
                        {
                            t.HasComment("商店使用者實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsAdmin = true,
                            IsEnable = true,
                            Name = "商店管理員",
                            Number = "shopAdmin",
                            Pwd = "shopAdmin",
                            Remarks = "預設的最高權限帳號"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsAdmin = false,
                            IsEnable = true,
                            Name = "員工1(測試用)",
                            Number = "shopEmployee1",
                            Pwd = "shopEmployee1",
                            Remarks = "預設的員工(測試用)"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsAdmin = false,
                            IsEnable = true,
                            Name = "一般客戶1(測試用)",
                            Number = "shopUser",
                            Pwd = "shopUser",
                            Remarks = "預設的一般使用者(測試用)"
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = 1695285957713L,
                            CreateUser = "shopAdmin",
                            IsAdmin = false,
                            IsEnable = true,
                            Name = "VIP客戶1(測試用)",
                            Number = "shopVipUser",
                            Pwd = "shopVipUser",
                            Remarks = "預設的VIP使用者(測試用)"
                        });
                });

            modelBuilder.Entity("EShopAPI.Cores.CompositeProductItems.CompositeProductItem", b =>
                {
                    b.HasOne("EShopAPI.Cores.CompositeProducts.CompositeProduct", "CompositeProduct")
                        .WithMany("CompositeProductItems")
                        .HasForeignKey("CompositeProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.EShopUnits.EShopUnit", "EShopUnit")
                        .WithMany("CompositeProductItems")
                        .HasForeignKey("EshopUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopInventories.ShopInventory", "ShopInventory")
                        .WithMany("CompositeProductItems")
                        .HasForeignKey("ShopInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CompositeProduct");

                    b.Navigation("EShopUnit");

                    b.Navigation("ShopInventory");
                });

            modelBuilder.Entity("EShopAPI.Cores.CompositeProducts.CompositeProduct", b =>
                {
                    b.HasOne("EShopAPI.Cores.EShopUnits.EShopUnit", "EShopUnit")
                        .WithMany("CompositeProduct")
                        .HasForeignKey("EShopUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopInventories.ShopInventory", "ShopInventory")
                        .WithOne("CompositeProduct")
                        .HasForeignKey("EShopAPI.Cores.CompositeProducts.CompositeProduct", "ShopInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EShopUnit");

                    b.Navigation("ShopInventory");
                });

            modelBuilder.Entity("EShopAPI.Cores.DeliveryPreferences.DeliveryPreference", b =>
                {
                    b.HasOne("EShopAPI.Cores.DeliveryCategories.DeliveryCategory", "DeliveryCategory")
                        .WithMany("DeliveryPreferences")
                        .HasForeignKey("DeliveryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopUsers.ShopUser", "ShopUser")
                        .WithMany("DeliveryPreferences")
                        .HasForeignKey("ShopUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryCategory");

                    b.Navigation("ShopUser");
                });

            modelBuilder.Entity("EShopAPI.Cores.MapCompositeProductDeliveries.MapCompositeProductDelivery", b =>
                {
                    b.HasOne("EShopAPI.Cores.CompositeProducts.CompositeProduct", "CompositeProduct")
                        .WithMany("MapCompositeProductDeliveries")
                        .HasForeignKey("CompositeProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.DeliveryCategories.DeliveryCategory", "DeliveryCategory")
                        .WithMany("MapCompositeProductDeliveries")
                        .HasForeignKey("DeliveryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompositeProduct");

                    b.Navigation("DeliveryCategory");
                });

            modelBuilder.Entity("EShopAPI.Cores.MapPermissionActions.MapPermissionAction", b =>
                {
                    b.HasOne("EShopAPI.Cores.ShopActions.ShopAction", "ShopAction")
                        .WithMany("MapPermissionActions")
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopPermissions.ShopPermission", "ShopPermission")
                        .WithMany("MapPermissionActions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopAction");

                    b.Navigation("ShopPermission");
                });

            modelBuilder.Entity("EShopAPI.Cores.MapProductCategories.MapProductCategory", b =>
                {
                    b.HasOne("EShopAPI.Cores.ProductCategories.ProductCategory", "ProductCategory")
                        .WithMany("MapProductCategories")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.Products.Product", "Product")
                        .WithMany("MapProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("EShopAPI.Cores.MapProductDeliveryCategorys.MapProductDeliveryCategory", b =>
                {
                    b.HasOne("EShopAPI.Cores.DeliveryCategories.DeliveryCategory", "DeliveryCategory")
                        .WithMany("MapProductDeliveryCategories")
                        .HasForeignKey("DeliveryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.Products.Product", "Product")
                        .WithMany("MapProductDeliveryCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryCategory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShopAPI.Cores.MapRolePermissions.MapRolePermission", b =>
                {
                    b.HasOne("EShopAPI.Cores.ShopPermissions.ShopPermission", "ShopPermission")
                        .WithMany("MapRolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopRoles.ShopRole", "ShopRole")
                        .WithMany("MapRolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopPermission");

                    b.Navigation("ShopRole");
                });

            modelBuilder.Entity("EShopAPI.Cores.MapUserRoles.MapUserRole", b =>
                {
                    b.HasOne("EShopAPI.Cores.ShopRoles.ShopRole", "ShopRole")
                        .WithMany("MapUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopUsers.ShopUser", "ShopUser")
                        .WithMany("MapUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopRole");

                    b.Navigation("ShopUser");
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderCompositeProducts.OrderCompositeProduct", b =>
                {
                    b.HasOne("EShopAPI.Cores.OrderMasters.OrderMaster", "OrderMaster")
                        .WithMany("OrderCompositeProducts")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopInventories.ShopInventory", "ShopInventory")
                        .WithMany("OrderCompositeProducts")
                        .HasForeignKey("ShopInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderMaster");

                    b.Navigation("ShopInventory");
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderForCompositeItems.OrderCompositeProductItem", b =>
                {
                    b.HasOne("EShopAPI.Cores.OrderCompositeProducts.OrderCompositeProduct", "OrderCompositeProduct")
                        .WithMany("OrderCompositeProductItems")
                        .HasForeignKey("OrderCompositeProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopInventories.ShopInventory", "ShopInventory")
                        .WithMany("OrderCompositeProductItems")
                        .HasForeignKey("ShopInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderCompositeProduct");

                    b.Navigation("ShopInventory");
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderMasters.OrderMaster", b =>
                {
                    b.HasOne("EShopAPI.Cores.DeliveryCategories.DeliveryCategory", "DeliveryCategory")
                        .WithMany("OrderMasters")
                        .HasForeignKey("DeliveryCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.PaymentCategories.PaymentCategory", "PaymentCategory")
                        .WithMany("OrderMasters")
                        .HasForeignKey("PaymentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopUsers.ShopUser", "ShopUser")
                        .WithMany("OrderMasters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DeliveryCategory");

                    b.Navigation("PaymentCategory");

                    b.Navigation("ShopUser");
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderProducts.OrderProduct", b =>
                {
                    b.HasOne("EShopAPI.Cores.OrderMasters.OrderMaster", "OrderMaster")
                        .WithMany("OrderProducts")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopInventories.ShopInventory", "ShopInventory")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ShopInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderMaster");

                    b.Navigation("ShopInventory");
                });

            modelBuilder.Entity("EShopAPI.Cores.Products.Product", b =>
                {
                    b.HasOne("EShopAPI.Cores.EShopUnits.EShopUnit", "EShopUnit")
                        .WithMany("Product")
                        .HasForeignKey("EShopUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EShopAPI.Cores.ShopInventories.ShopInventory", "ShopInventory")
                        .WithOne("Product")
                        .HasForeignKey("EShopAPI.Cores.Products.Product", "ShopInventoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EShopUnit");

                    b.Navigation("ShopInventory");
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderCompositeProductItems.RecordOrderCompositeProductItem", b =>
                {
                    b.HasOne("EShopAPI.Cores.RecordOrderCompositeProducts.RecordOrderCompositeProduct", "RecordOrderCompositeProduct")
                        .WithMany("RecordOrderCompositeProductItems")
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecordOrderCompositeProduct");
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderCompositeProducts.RecordOrderCompositeProduct", b =>
                {
                    b.HasOne("EShopAPI.Cores.RecordOrderMasters.RecordOrderMaster", "RecordOrderMaster")
                        .WithMany("RecordOrderCompositeProducts")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecordOrderMaster");
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderMasters.RecordOrderMaster", b =>
                {
                    b.HasOne("EShopAPI.Cores.ShopUsers.ShopUser", "ShopUser")
                        .WithMany("RecordOrderMasters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ShopUser");
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderProducts.RecordOrderProduct", b =>
                {
                    b.HasOne("EShopAPI.Cores.RecordOrderMasters.RecordOrderMaster", "RecordOrderMaster")
                        .WithMany("RecordOrderProducts")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecordOrderMaster");
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopCarts.ShopCart", b =>
                {
                    b.HasOne("EShopAPI.Cores.ShopUsers.ShopUser", "ShopUser")
                        .WithMany("ShopCarts")
                        .HasForeignKey("ShopUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShopUser");
                });

            modelBuilder.Entity("EShopAPI.Cores.CompositeProducts.CompositeProduct", b =>
                {
                    b.Navigation("CompositeProductItems");

                    b.Navigation("MapCompositeProductDeliveries");
                });

            modelBuilder.Entity("EShopAPI.Cores.DeliveryCategories.DeliveryCategory", b =>
                {
                    b.Navigation("DeliveryPreferences");

                    b.Navigation("MapCompositeProductDeliveries");

                    b.Navigation("MapProductDeliveryCategories");

                    b.Navigation("OrderMasters");
                });

            modelBuilder.Entity("EShopAPI.Cores.EShopUnits.EShopUnit", b =>
                {
                    b.Navigation("CompositeProduct");

                    b.Navigation("CompositeProductItems");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderCompositeProducts.OrderCompositeProduct", b =>
                {
                    b.Navigation("OrderCompositeProductItems");
                });

            modelBuilder.Entity("EShopAPI.Cores.OrderMasters.OrderMaster", b =>
                {
                    b.Navigation("OrderCompositeProducts");

                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("EShopAPI.Cores.PaymentCategories.PaymentCategory", b =>
                {
                    b.Navigation("OrderMasters");
                });

            modelBuilder.Entity("EShopAPI.Cores.ProductCategories.ProductCategory", b =>
                {
                    b.Navigation("MapProductCategories");
                });

            modelBuilder.Entity("EShopAPI.Cores.Products.Product", b =>
                {
                    b.Navigation("MapProductCategories");

                    b.Navigation("MapProductDeliveryCategories");
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderCompositeProducts.RecordOrderCompositeProduct", b =>
                {
                    b.Navigation("RecordOrderCompositeProductItems");
                });

            modelBuilder.Entity("EShopAPI.Cores.RecordOrderMasters.RecordOrderMaster", b =>
                {
                    b.Navigation("RecordOrderCompositeProducts");

                    b.Navigation("RecordOrderProducts");
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopActions.ShopAction", b =>
                {
                    b.Navigation("MapPermissionActions");
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopInventories.ShopInventory", b =>
                {
                    b.Navigation("CompositeProduct");

                    b.Navigation("CompositeProductItems");

                    b.Navigation("OrderCompositeProductItems");

                    b.Navigation("OrderCompositeProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopPermissions.ShopPermission", b =>
                {
                    b.Navigation("MapPermissionActions");

                    b.Navigation("MapRolePermissions");
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopRoles.ShopRole", b =>
                {
                    b.Navigation("MapRolePermissions");

                    b.Navigation("MapUserRoles");
                });

            modelBuilder.Entity("EShopAPI.Cores.ShopUsers.ShopUser", b =>
                {
                    b.Navigation("DeliveryPreferences");

                    b.Navigation("MapUserRoles");

                    b.Navigation("OrderMasters");

                    b.Navigation("RecordOrderMasters");

                    b.Navigation("ShopCarts");
                });
#pragma warning restore 612, 618
        }
    }
}
